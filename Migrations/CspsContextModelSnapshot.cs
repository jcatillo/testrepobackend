// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend.Context;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(CspsContext))]
    partial class CspsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_general_ci")
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");
            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("backend.Models.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateStamp")
                        .HasColumnType("datetime")
                        .HasColumnName("date_stamp");

                    b.Property<string>("StudentsId")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("students_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("admin");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("backend.Models.Announcement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdminStudentId")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("admin_student_id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("varchar(2048)")
                        .HasColumnName("content");

                    b.Property<DateTime>("DateStamp")
                        .HasColumnType("datetime")
                        .HasColumnName("date_stamp");

                    b.Property<string>("PhotosHash")
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("photos_hash");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("announcements");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("backend.Models.Atillo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Giatay")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("giatay");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("Atillo");
                });

            modelBuilder.Entity("backend.Models.College", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Acronym")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("acronym");

                    b.Property<sbyte>("Disabled")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("disabled");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("colleges");

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_general_ci");
                });

            modelBuilder.Entity("backend.Models.CollegesCourse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Acronym")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("acronym");

                    b.Property<int>("CollegeId")
                        .HasColumnType("int(11)")
                        .HasColumnName("college_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("colleges_courses");

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_general_ci");
                });

            modelBuilder.Entity("backend.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("courses");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("backend.Models.EditLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AdminId")
                        .HasColumnType("int(11)")
                        .HasColumnName("admin_id");

                    b.Property<string>("After")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)")
                        .HasColumnName("after");

                    b.Property<string>("Before")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)")
                        .HasColumnName("before");

                    b.Property<DateTime>("DateStamp")
                        .HasColumnType("datetime")
                        .HasColumnName("date_stamp");

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("ip_address");

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("method");

                    b.Property<string>("Table")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("table");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("edit_logs");

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_general_ci");
                });

            modelBuilder.Entity("backend.Models.Env", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateStamp")
                        .HasColumnType("datetime")
                        .HasColumnName("date_stamp");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("key");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("value");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("env");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("backend.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<DateTime>("DateStamp")
                        .HasColumnType("datetime")
                        .HasColumnName("date_stamp");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time")
                        .HasColumnName("end_time");

                    b.Property<string>("PhotosHash")
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("photos_hash");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time")
                        .HasColumnName("start_time");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("title");

                    b.Property<string>("Venue")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("venue");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("events");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("backend.Models.Ict2024Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<sbyte>("CampusId")
                        .HasColumnType("tinyint(11)")
                        .HasColumnName("campus_id");

                    b.Property<DateTime>("DateStamp")
                        .HasColumnType("datetime")
                        .HasColumnName("date_stamp");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("password");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("ict2024_accounts");

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_general_ci");
                });

            modelBuilder.Entity("backend.Models.Ict2024Campus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Campus")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("campus");

                    b.Property<string>("CampusName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("campus_name");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("ict2024_campus");

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_general_ci");
                });

            modelBuilder.Entity("backend.Models.Ict2024Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Course")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("course");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("course_name");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("ict2024_courses");

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_general_ci");
                });

            modelBuilder.Entity("backend.Models.Ict2024DiscountCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CampusId")
                        .HasColumnType("int(11)")
                        .HasColumnName("campus_id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("code");

                    b.Property<DateTime>("Expiration")
                        .HasColumnType("datetime")
                        .HasColumnName("expiration");

                    b.Property<int>("Price")
                        .HasColumnType("int(11)")
                        .HasColumnName("price");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("ict2024_discount_codes");

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_general_ci");
                });

            modelBuilder.Entity("backend.Models.Ict2024Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Attendance")
                        .HasColumnType("datetime")
                        .HasColumnName("attendance");

                    b.Property<sbyte>("CampusId")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("campus_id");

                    b.Property<sbyte>("CourseId")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("course_id");

                    b.Property<DateTime>("DateStamp")
                        .HasColumnType("datetime")
                        .HasColumnName("date_stamp");

                    b.Property<string>("DiscountCode")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("discount_code");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("first_name");

                    b.Property<sbyte>("KitsClaimed")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("kits_claimed");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("last_name");

                    b.Property<DateTime?>("PaymentConfirmed")
                        .HasColumnType("datetime")
                        .HasColumnName("payment_confirmed");

                    b.Property<string>("Rfid")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("rfid");

                    b.Property<sbyte>("SnackClaimed")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("snack_claimed");

                    b.Property<string>("StudentId")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("student_id");

                    b.Property<DateTime?>("TshirtClaimed")
                        .HasColumnType("datetime")
                        .HasColumnName("tshirt_claimed");

                    b.Property<sbyte?>("TshirtSizeId")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("tshirt_size_id");

                    b.Property<sbyte>("YearLevel")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("year_level");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("ict2024_students");

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_general_ci");
                });

            modelBuilder.Entity("backend.Models.Ict2024TshirtSize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("code");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("ict2024_tshirt_sizes");

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_general_ci");
                });

            modelBuilder.Entity("backend.Models.LoginLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateStamp")
                        .HasColumnType("datetime")
                        .HasColumnName("date_stamp");

                    b.Property<int>("StudentsId")
                        .HasColumnType("int(11)")
                        .HasColumnName("students_id");

                    b.Property<sbyte>("Type")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("login_logs");

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_general_ci");
                });

            modelBuilder.Entity("backend.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdminRemarks")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("admin_remarks");

                    b.Property<DateTime>("DateStamp")
                        .HasColumnType("datetime")
                        .HasColumnName("date_stamp");

                    b.Property<DateTime?>("EditDate")
                        .HasColumnType("datetime")
                        .HasColumnName("edit_date");

                    b.Property<int>("ModeOfPayment")
                        .HasColumnType("int(11)")
                        .HasColumnName("mode_of_payment")
                        .HasComment("1=Walk-in,2=GCash");

                    b.Property<int>("ProductsId")
                        .HasColumnType("int(11)")
                        .HasColumnName("products_id");

                    b.Property<int>("Quantity")
                        .HasColumnType("int(11)")
                        .HasColumnName("quantity");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("reference");

                    b.Property<int>("Status")
                        .HasColumnType("int(11)")
                        .HasColumnName("status");

                    b.Property<DateTime?>("StatusUpdated")
                        .HasColumnType("datetime")
                        .HasColumnName("status_updated");

                    b.Property<int>("StudentsGuestId")
                        .HasColumnType("int(11)")
                        .HasColumnName("students_guest_id");

                    b.Property<int?>("StudentsId")
                        .HasColumnType("int(11)")
                        .HasColumnName("students_id");

                    b.Property<string>("UniqueId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("unique_id");

                    b.Property<string>("UserRemarks")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("user_remarks");

                    b.Property<int?>("VariationsId")
                        .HasColumnType("int(11)")
                        .HasColumnName("variations_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("orders");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("backend.Models.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("mediumblob")
                        .HasColumnName("data");

                    b.Property<DateTime>("DateStamp")
                        .HasColumnType("datetime")
                        .HasColumnName("date_stamp");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("hash");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("photos");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("backend.Models.PhotosGcash", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("mediumblob")
                        .HasColumnName("data");

                    b.Property<DateTime>("DateStamp")
                        .HasColumnType("datetime")
                        .HasColumnName("date_stamp");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("hash");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("varchar(24)")
                        .HasColumnName("reference");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("photos_gcash");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("backend.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateStamp")
                        .HasColumnType("datetime")
                        .HasColumnName("date_stamp");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<sbyte>("IsAvailable")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("is_available");

                    b.Property<int>("Likes")
                        .HasColumnType("int(11)")
                        .HasColumnName("likes");

                    b.Property<int>("MaxQuantity")
                        .HasColumnType("int(11)")
                        .HasColumnName("max_quantity");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("PhotosHash")
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("photos_hash");

                    b.Property<int>("Price")
                        .HasColumnType("int(11)")
                        .HasColumnName("price");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("slug");

                    b.Property<int>("Stock")
                        .HasColumnType("int(11)")
                        .HasColumnName("stock");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("products");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("backend.Models.ProductVariation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PhotosHash")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("photos_hash");

                    b.Property<int>("ProductsId")
                        .HasColumnType("int(11)")
                        .HasColumnName("products_id");

                    b.Property<int>("Stock")
                        .HasColumnType("int(11)")
                        .HasColumnName("stock");

                    b.Property<int>("VariationsId")
                        .HasColumnType("int(11)")
                        .HasColumnName("variations_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("product_variations");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("backend.Models.ResetToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateStamp")
                        .HasColumnType("datetime")
                        .HasColumnName("date_stamp");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_used");

                    b.Property<DateTime?>("ResetDateStamp")
                        .HasColumnType("datetime")
                        .HasColumnName("reset_date_stamp");

                    b.Property<int>("StudentsId")
                        .HasColumnType("int(11)")
                        .HasColumnName("students_id");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("varchar(24)")
                        .HasColumnName("token");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("reset_tokens");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("backend.Models.Roginand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("Roginand");
                });

            modelBuilder.Entity("backend.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateStamp")
                        .HasColumnType("datetime")
                        .HasColumnName("date_stamp");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email_address");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("last_name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("password");

                    b.Property<string>("StudentId")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("student_id");

                    b.Property<int>("YearLevel")
                        .HasColumnType("int(11)")
                        .HasColumnName("year_level");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("students");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("backend.Models.StudentsGuest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<sbyte>("Course")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("course");

                    b.Property<DateTime>("DateStamp")
                        .HasColumnType("datetime")
                        .HasColumnName("date_stamp");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("email_address");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("last_name");

                    b.Property<string>("StudentId")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("student_id");

                    b.Property<sbyte>("YearLevel")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("year_level");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("students_guest");

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_general_ci");
                });

            modelBuilder.Entity("backend.Models.Tatakform", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateStamp")
                        .HasColumnType("datetime")
                        .HasColumnName("date_stamp");

                    b.Property<DateOnly>("FromDate")
                        .HasColumnType("date")
                        .HasColumnName("from_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("name");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("slug");

                    b.Property<DateOnly>("ToDate")
                        .HasColumnType("date")
                        .HasColumnName("to_date");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("tatakforms");

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_general_ci");
                });

            modelBuilder.Entity("backend.Models.TatakformsAdmin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateStamp")
                        .HasColumnType("datetime")
                        .HasColumnName("date_stamp");

                    b.Property<int>("TatakformsStudentsId")
                        .HasColumnType("int(11)")
                        .HasColumnName("tatakforms_students_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("tatakforms_admin");

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_general_ci");
                });

            modelBuilder.Entity("backend.Models.TatakformsAttendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Day1Am")
                        .HasColumnType("datetime")
                        .HasColumnName("day1_am");

                    b.Property<DateTime?>("Day1Pm")
                        .HasColumnType("datetime")
                        .HasColumnName("day1_pm");

                    b.Property<DateTime?>("Day2Am")
                        .HasColumnType("datetime")
                        .HasColumnName("day2_am");

                    b.Property<DateTime?>("Day2Pm")
                        .HasColumnType("datetime")
                        .HasColumnName("day2_pm");

                    b.Property<DateTime?>("Day3Am")
                        .HasColumnType("datetime")
                        .HasColumnName("day3_am");

                    b.Property<DateTime?>("Day3Pm")
                        .HasColumnType("datetime")
                        .HasColumnName("day3_pm");

                    b.Property<int>("EventId")
                        .HasColumnType("int(11)")
                        .HasColumnName("event_id");

                    b.Property<int>("StudentId")
                        .HasColumnType("int(11)")
                        .HasColumnName("student_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("tatakforms_attendance");

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_general_ci");
                });

            modelBuilder.Entity("backend.Models.TatakformsResetToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateStamp")
                        .HasColumnType("datetime")
                        .HasColumnName("date_stamp");

                    b.Property<sbyte>("IsUsed")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("is_used");

                    b.Property<DateTime?>("ResetDateStamp")
                        .HasColumnType("datetime")
                        .HasColumnName("reset_date_stamp");

                    b.Property<int>("TatakformsStudentsId")
                        .HasColumnType("int(11)")
                        .HasColumnName("tatakforms_students_id");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("varchar(24)")
                        .HasColumnName("token");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("tatakforms_reset_tokens");

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_general_ci");
                });

            modelBuilder.Entity("backend.Models.TatakformsStudent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int(11)")
                        .HasColumnName("course_id");

                    b.Property<DateTime>("DateStamp")
                        .HasColumnType("datetime")
                        .HasColumnName("date_stamp");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email_address");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("last_name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("password");

                    b.Property<string>("StudentId")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("student_id");

                    b.Property<int>("YearLevel")
                        .HasColumnType("int(11)")
                        .HasColumnName("year_level");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("tatakforms_students");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("backend.Models.Tutorial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateStamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("date_stamp")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("language");

                    b.Property<string>("Remarks")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("remarks");

                    b.Property<DateTime>("Schedule")
                        .HasColumnType("datetime")
                        .HasColumnName("schedule");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("enum('Pending','Approved','Rejected','Done')")
                        .HasColumnName("status")
                        .HasDefaultValueSql("'Pending'");

                    b.Property<DateTime>("StatusDateStamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("status_date_stamp")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<string>("StudentId")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("student_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("tutorials");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });

            modelBuilder.Entity("backend.Models.Variation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("variations");

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "utf8mb3");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb3_general_ci");
                });
#pragma warning restore 612, 618
        }
    }
}
